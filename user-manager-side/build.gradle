plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.global.logic.user.manager'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

jacoco {
	toolVersion = "0.8.10"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'io.vavr:vavr:1.0.0-alpha-3'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.2'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core:4.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required.set(true)
		html.required.set(true)

		afterEvaluate {
			classDirectories.setFrom(
					files(classDirectories.files.collect {
						fileTree(dir: it, exclude: [
								// exclude dtos package
								'**/dto/**',
								// exclude models packages
								'**/model/**',
								// exclude events packages
								'**/cmd/**',
								// exclude events packages
								'**/event/**',
								// exclude events packages
								'**/enums/**',
								// exclude exception packages
								'**/exception/**',
								// exclude domain packages
								'**/domain/**'

						])
					})
			)
		}
	}
}
